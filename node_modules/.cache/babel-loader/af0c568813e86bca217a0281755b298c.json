{"ast":null,"code":"import _classCallCheck from \"/Users/rishwan/Documents/projects/mediumclone-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rishwan/Documents/projects/mediumclone-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rishwan/Documents/projects/mediumclone-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rishwan/Documents/projects/mediumclone-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rishwan/Documents/projects/mediumclone-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rishwan/Documents/projects/mediumclone-admin/src/pages/article/article_create/components/ArticleCreateForm.js\";\nimport React from 'react';\nimport { Row, Col, Form, Input, Select, Divider } from 'antd';\nimport ReactQuill from 'react-quill'; // ES6\n\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nimport ArticlesContext from '../../ArticlesContext';\nimport ImageUpload from '../../../components/ImageUpload';\nvar FormItem = Form.Item;\nvar TextArea = Input.TextArea;\n\nvar ArticleCreateForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ArticleCreateForm, _React$Component);\n\n  function ArticleCreateForm(props) {\n    var _this;\n\n    _classCallCheck(this, ArticleCreateForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ArticleCreateForm).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n    };\n\n    _this.onFileUpload = function (path) {\n      _this.setState({\n        article_img: path\n      });\n    };\n\n    _this.bodyChange = function (value) {\n      _this.setState({\n        body: value\n      });\n    };\n\n    _this.state = {\n      article_img: null,\n      body: ''\n    };\n    return _this;\n  }\n\n  _createClass(ArticleCreateForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.articles.fetchTopics();\n      this.props.articles.fetchTags();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$props$articles = this.props.articles,\n          topics = _this$props$articles.topics,\n          tags = _this$props$articles.tags;\n\n      if (!topics || !tags) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Loading\");\n      }\n\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        label: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, getFieldDecorator('title', {\n        rules: [{\n          required: true,\n          message: \"Article Title...\"\n        }]\n      })(React.createElement(Input, {\n        name: \"article_title\",\n        placeholder: \"Title...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        label: \"Tag Line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, getFieldDecorator('tag_line', {\n        rules: [{\n          required: true,\n          message: \"Tag Line...\"\n        }]\n      })(React.createElement(Input, {\n        name: \"tag_line\",\n        placeholder: \"Tag Line...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(ReactQuill, {\n        className: \"quill-editor\",\n        defaultValue: this.state.text,\n        onChange: this.bodyChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        label: \"Topic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, getFieldDecorator('topic', {\n        rules: [{\n          required: true,\n          message: \"Select a topic...\"\n        }]\n      })(React.createElement(Select, {\n        name: \"attribute_type\",\n        onChange: this.handleAttributeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, topics.map(function (item) {\n        return React.createElement(Select.Option, {\n          key: item.id,\n          value: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, item.title);\n      })))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(ImageUpload, {\n        token: this.props.articles.token,\n        onUpload: this.onFileUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(FormItem, {\n        label: \"Tags\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, getFieldDecorator('tags', {\n        rules: [{\n          required: true,\n          message: \"sample, tag, goes, here\"\n        }]\n      })(React.createElement(Select, {\n        name: \"tags\",\n        mode: \"tags\",\n        onChange: this.handleAttributeChange,\n        tokenSeparators: [','],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, tags.map(function (item) {\n        return React.createElement(Select.Option, {\n          key: item.id,\n          value: item.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, item.name);\n      })))))));\n    }\n  }]);\n\n  return ArticleCreateForm;\n}(React.Component);\n\nvar WrappedForm = Form.create()(ArticleCreateForm);\nexport default React.forwardRef(function (props, ref) {\n  return React.createElement(ArticlesContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, function (articles) {\n    return React.createElement(WrappedForm, Object.assign({}, props, {\n      articles: articles,\n      ref: ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  });\n});","map":{"version":3,"sources":["/Users/rishwan/Documents/projects/mediumclone-admin/src/pages/article/article_create/components/ArticleCreateForm.js"],"names":["React","Row","Col","Form","Input","Select","Divider","ReactQuill","ArticlesContext","ImageUpload","FormItem","Item","TextArea","ArticleCreateForm","props","handleSubmit","e","preventDefault","onFileUpload","path","setState","article_img","bodyChange","value","body","state","articles","fetchTopics","fetchTags","getFieldDecorator","form","topics","tags","rules","required","message","text","handleAttributeChange","map","item","id","title","token","name","Component","WrappedForm","create","forwardRef","ref"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Row, Col, Form, Input, Select, Divider } from 'antd'\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css'; // ES6\nimport ArticlesContext from '../../ArticlesContext'\nimport ImageUpload from '../../../components/ImageUpload'\n\nconst FormItem = Form.Item\nconst { TextArea } = Input\n\n\nclass ArticleCreateForm extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      article_img: null,\n      body: ''\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n  }\n\n  componentDidMount () {\n    this.props.articles.fetchTopics()\n    this.props.articles.fetchTags()\n  }\n\n  onFileUpload = (path) => {\n    this.setState({article_img: path})\n  }\n\n  bodyChange = (value) => {\n    this.setState({ body: value })\n  }\n\n  render () {\n\n    const { getFieldDecorator } = this.props.form\n    const { topics, tags } = this.props.articles\n\n    if(!topics || !tags) {\n      return <div>Loading</div>\n    }\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Row gutter={24}>\n          <Col span={15}>\n            <FormItem label={\"Title\"}>\n              {getFieldDecorator('title',{\n                rules: [{required: true, message: \"Article Title...\"}]\n              })(\n                <Input name={\"article_title\"} placeholder={\"Title...\"}  />\n              )}\n            </FormItem>\n            <FormItem label={\"Tag Line\"}>\n              {getFieldDecorator('tag_line',{\n                rules: [{required: true, message: \"Tag Line...\"}]\n              })(\n                <Input name={\"tag_line\"} placeholder={\"Tag Line...\"}  />\n              )}\n            </FormItem>\n            <Divider />\n            <ReactQuill\n              className=\"quill-editor\"\n              defaultValue={this.state.text}\n              onChange={this.bodyChange} />\n          </Col>\n          <Col span={9}>\n            <FormItem label={\"Topic\"}>\n              {getFieldDecorator('topic',{\n                rules: [{required: true, message: \"Select a topic...\"}]\n              })(\n                <Select name={\"attribute_type\"} onChange={this.handleAttributeChange}>\n                  {topics.map(item => (\n                    <Select.Option key={item.id} value={item.id}>\n                      {item.title}\n                    </Select.Option>\n                  ))}\n                </Select>\n              )}\n            </FormItem>\n            <Divider />\n            <ImageUpload token={this.props.articles.token} onUpload={this.onFileUpload}/>\n            <Divider />\n            <FormItem label={\"Tags\"}>\n              {getFieldDecorator('tags',{\n                rules: [{required: true, message: \"sample, tag, goes, here\"}]\n              })(\n                <Select\n                  name={\"tags\"}\n                  mode=\"tags\"\n                  onChange={this.handleAttributeChange}\n                  tokenSeparators={[',']}\n                >\n                  {tags.map(item => (\n                    <Select.Option key={item.id} value={item.name}>\n                      {item.name}\n                    </Select.Option>\n                  ))}\n                </Select>\n              )}\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n}\n\nconst WrappedForm = Form.create()(ArticleCreateForm);\n\nexport default React.forwardRef((props, ref) => (\n  <ArticlesContext.Consumer>\n    {articles => <WrappedForm {...props} articles={articles} ref={ref} />}\n  </ArticlesContext.Consumer>\n))"]},"metadata":{},"sourceType":"module"}