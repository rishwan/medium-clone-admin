{"ast":null,"code":"import _classCallCheck from \"/Users/rishwan/Documents/projects/mediumclone-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rishwan/Documents/projects/mediumclone-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rishwan/Documents/projects/mediumclone-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rishwan/Documents/projects/mediumclone-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rishwan/Documents/projects/mediumclone-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rishwan/Documents/projects/mediumclone-admin/src/pages/components/ImageUpload.js\";\nimport React from 'react';\nimport { Upload, Icon, message } from 'antd';\nimport api_config from '../../config/api_config';\n\nvar ImageUpload =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageUpload, _React$Component);\n\n  function ImageUpload(props) {\n    var _this;\n\n    _classCallCheck(this, ImageUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageUpload).call(this, props));\n\n    _this.getBase64 = function (img, callback) {\n      var reader = new FileReader();\n      reader.addEventListener('load', function () {\n        return callback(reader.result);\n      });\n      reader.readAsDataURL(img);\n    };\n\n    _this.beforeUpload = function (file) {\n      var isJPG = file.type === 'image/jpeg';\n\n      if (!isJPG) {\n        message.error('You can only upload JPG file!');\n      }\n\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isLt2M) {\n        message.error('Image must smaller than 2MB!');\n      }\n\n      return isJPG && isLt2M;\n    };\n\n    _this.handleChange = function (info) {\n      if (info.file.status === 'uploading') {\n        _this.setState({\n          loading: true\n        });\n\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        _this.getBase64(info.file.originFileObj, function (imageUrl) {\n          return _this.setState({\n            imageUrl: imageUrl,\n            loading: false\n          });\n        });\n\n        console.log(info.file.response.result.path);\n\n        _this.props.onUpload(info.file.response.result.path);\n      }\n    };\n\n    _this.onProgress = function (_ref, file) {\n      var percent = _ref.percent;\n      console.log('onProgress', \"\".concat(percent, \"%\"), file.name);\n    };\n\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(ImageUpload, [{\n    key: \"render\",\n    value: function render() {\n      var uploadButton = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: this.state.loading ? 'loading' : 'plus',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Upload\"));\n      var imageUrl = this.state.imageUrl;\n      return React.createElement(Upload, {\n        name: \"article_image\",\n        listType: \"picture-card\",\n        className: \"article-uploader\",\n        showUploadList: false,\n        action: api_config.baseUrl + \"article/image_upload\",\n        headers: {\n          Authorization: 'Bearer ' + this.props.token\n        },\n        beforeUpload: this.beforeUpload,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, imageUrl ? React.createElement(\"img\", {\n        className: 'article-upload-img',\n        src: imageUrl,\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }) : uploadButton);\n    }\n  }]);\n\n  return ImageUpload;\n}(React.Component);\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/rishwan/Documents/projects/mediumclone-admin/src/pages/components/ImageUpload.js"],"names":["React","Upload","Icon","message","api_config","ImageUpload","props","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJPG","type","error","isLt2M","size","handleChange","info","status","setState","loading","originFileObj","imageUrl","console","log","response","path","onUpload","onProgress","percent","name","state","uploadButton","baseUrl","Authorization","token","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Upload, Icon, message } from 'antd'\nimport api_config from '../../config/api_config'\n\nclass ImageUpload extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      loading: false\n    }\n  }\n\n\n  getBase64 = (img, callback) => {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  beforeUpload = (file) => {\n    const isJPG = file.type === 'image/jpeg';\n    if (!isJPG) {\n      message.error('You can only upload JPG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n    return isJPG && isLt2M;\n  }\n\n  handleChange = (info) => {\n    if (info.file.status === 'uploading') {\n      this.setState({ loading: true });\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n        imageUrl,\n        loading: false,\n      }));\n\n      console.log(info.file.response.result.path)\n\n      this.props.onUpload(info.file.response.result.path)\n\n    }\n  }\n\n  onProgress = ({percent}, file) => {\n    console.log('onProgress', `${percent}%`, file.name);\n  }\n\n  render () {\n\n    const uploadButton = (\n      <div>\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    )\n    const imageUrl = this.state.imageUrl\n\n    return (\n      <Upload\n        name=\"article_image\"\n        listType=\"picture-card\"\n        className=\"article-uploader\"\n        showUploadList={false}\n        action= {api_config.baseUrl + \"article/image_upload\"}\n        headers={{\n          Authorization: 'Bearer ' + this.props.token,\n        }}\n        beforeUpload={this.beforeUpload}\n        onChange={this.handleChange}\n      >\n        {imageUrl ? <img className={'article-upload-img'} src={imageUrl} alt=\"avatar\" /> : uploadButton}\n      </Upload>\n    )\n  }\n}\n\nexport default ImageUpload"]},"metadata":{},"sourceType":"module"}